C51 COMPILER V9.54   OLED                                                                  04/26/2022 22:30:02 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE OLED
OBJECT MODULE PLACED IN .\list\oled.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE oled.c LARGE OMF2 OPTIMIZE(8,SPEED) BROWSE DEBUG PRINT(.\list\oled.lst) 
                    -TABS(2) OBJECT(.\list\oled.obj)

line level    source

   1          #include "oled.h"
   2          #include "I2C.h"
   3          #include "intrins.h"
   4          #include "oledfont.h"
   5          
   6          ////IIC开始
   7          //void IIC_Start()
   8          //{
   9          //  OLED_SCLK_Set();
  10          //  _nop_();_nop_();_nop_();   
  11          //  OLED_SDIN_Set();
  12          //  _nop_();_nop_();_nop_();   
  13          //  OLED_SDIN_Clr();
  14          //  _nop_();_nop_();_nop_();   
  15          //  OLED_SCLK_Clr();
  16          //  _nop_();_nop_();_nop_();   
  17          //}
  18          
  19          ////IIC结束
  20          //void IIC_Stop()
  21          //{
  22          //  OLED_SCLK_Set() ;
  23          //  _nop_();_nop_();_nop_();   
  24          //  OLED_SDIN_Clr();
  25          //  _nop_();_nop_();_nop_();   
  26          //  OLED_SDIN_Set();
  27          //  _nop_();_nop_();_nop_();   
  28          //  
  29          //}
  30          
  31          ////IIC接收应答
  32          //void IIC_Wait_Ack()
  33          //{
  34          //  OLED_SCLK_Set();//时钟线置高，接收数据
  35          //  _nop_();_nop_();_nop_();   
  36          //  OLED_SCLK_Clr();
  37          //  _nop_();_nop_();_nop_();   
  38          //}
  39          
  40          ////IIC写入一个字节
  41          //void Write_IIC_Byte(unsigned char IIC_Byte)
  42          //{
  43          //  unsigned char i;
  44          //  unsigned char m,da;
  45          //  da=IIC_Byte;
  46          //  _nop_();_nop_();_nop_();   
  47          //  OLED_SCLK_Clr();  //时钟线置低
  48          //  _nop_();_nop_();_nop_();   
  49          //  for(i=0;i<8;i++)    
  50          //  {
  51          //    m=da;
  52          //    m=m&0x80;//数据从高位开始发送和接收
  53          //    if(m==0x80)
  54          //      OLED_SDIN_Set();
C51 COMPILER V9.54   OLED                                                                  04/26/2022 22:30:02 PAGE 2   

  55          //    else 
  56          //      OLED_SDIN_Clr();
  57          //    _nop_();_nop_();_nop_();   
  58          //    da=da<<1;
  59          //    OLED_SCLK_Set();//时钟线置高，开始接收数据
  60          //    _nop_();_nop_();_nop_();   
  61          //    OLED_SCLK_Clr();
  62          //    _nop_();_nop_();_nop_();   
  63          //  }
  64          //}
  65          
  66          //oled写命令
  67          void Write_IIC_Command(unsigned char IIC_Command)
  68          {
  69   1        EAXSFR();
  70   1        Start();
  71   1        SendData(0x78);           //Slave address,SA0=0(D/C#=0; R/W#=0)
  72   1        RecvACK();  
  73   1        SendData(0x00);     //Contrl byte   Co("0")+D/C#("0")+6个0    控制下一个Data Byte是命令
  74   1        RecvACK();  
  75   1        SendData(IIC_Command); 
  76   1        RecvACK();  
  77   1        Stop();
  78   1        EAXRAM();
  79   1      }
  80          
  81          //oled写数据
  82          void Write_IIC_Data(unsigned char IIC_Data)
  83          {
  84   1        EAXSFR();
  85   1        Start();
  86   1        SendData(0x78);     //Slave address,SA0=0(D/C#=0; R/W#=0)
  87   1        RecvACK();  
  88   1        SendData(0x40);     //Contrl byte Co("0")+D/C#("1")+6个0    控制下一个Data Byte是数据
  89   1        RecvACK();  
  90   1        SendData(IIC_Data);
  91   1        RecvACK();  
  92   1        Stop();
  93   1        EAXRAM();
  94   1      }
  95          
  96          //oled写指令
  97          void OLED_WR_Byte(unsigned dat,unsigned cmd)
  98          {
  99   1        if(cmd) //cmd为1时写数据    
 100   1        Write_IIC_Data(dat);
 101   1        else  //否者写命令
 102   1        Write_IIC_Command(dat);
 103   1      }
 104          
 105          //图片填入
 106          void fill_picture(unsigned char fill_Data)
 107          {
 108   1        unsigned char m,n;
 109   1        for(m=0;m<8;m++)
 110   1        {
 111   2          OLED_WR_Byte(0xB0+m,0);   //page0-page1(命令)-----B0~B7
 112   2          OLED_WR_Byte(0x00,0);   //low column start address(命令)
 113   2          OLED_WR_Byte(0x10,0);   //high column start address(命令)-----高低综合从00开始
 114   2          for(n=0;n<128;n++)
 115   2            OLED_WR_Byte(fill_Data,1);//(数据)
 116   2        }
C51 COMPILER V9.54   OLED                                                                  04/26/2022 22:30:02 PAGE 3   

 117   1      }
 118          
 119          //坐标设置(x:0~127  y:0~7)
 120          void OLED_Set_Pos(unsigned char x, unsigned char y) 
 121          {   
 122   1        OLED_WR_Byte(0xB0+y,OLED_CMD);        //设置行坐标
 123   1        OLED_WR_Byte(((x&0xf0)>>4)|0x10,OLED_CMD);  //设置高行坐标
 124   1        OLED_WR_Byte((x&0x0f),OLED_CMD);      //设置低行坐标 
 125   1      }   
 126          
 127          //开启OLED显示    
 128          void OLED_Display_On(void)
 129          {
 130   1        OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
 131   1        OLED_WR_Byte(0X14,OLED_CMD);  //DCDC ON
 132   1        
 133   1        OLED_WR_Byte(0XAF,OLED_CMD);  //DISPLAY ON  (显示开)
 134   1      }
 135          
 136          //关闭OLED显示     
 137          void OLED_Display_Off(void)
 138          {
 139   1        OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
 140   1        OLED_WR_Byte(0X10,OLED_CMD);  //DCDC OFF
 141   1        
 142   1        OLED_WR_Byte(0XAE,OLED_CMD);  //DISPLAY OFF (显示关)
 143   1      }
 144          
 145          //清屏函数,清完屏,整个屏幕是黑色的!和没点亮一样!!!    
 146          void OLED_Clear(void)  
 147          {  
 148   1        u8 i,n;       
 149   1        for(i=0;i<8;i++)  
 150   1        {  
 151   2          OLED_WR_Byte (0xB0+i,OLED_CMD);    //设置页地址（0~7）
 152   2          OLED_WR_Byte (0x00,OLED_CMD);      //设置显示位置---列低地址
 153   2          OLED_WR_Byte (0x10,OLED_CMD);      //设置显示位置---列高地址   
 154   2          for(n=0;n<128;n++)
 155   2            OLED_WR_Byte(0,OLED_DATA);     //写0清屏
 156   2        } //更新显示
 157   1      }
 158          
 159          //点亮函数,点亮整个屏幕!!!
 160          void OLED_On(void)  
 161          {  
 162   1        u8 i,n;       
 163   1        for(i=0;i<8;i++)  
 164   1        {  
 165   2          OLED_WR_Byte (0xb0+i,OLED_CMD);    //设置页地址（0~7）
 166   2          OLED_WR_Byte (0x00,OLED_CMD);      //设置显示位置―列低地址
 167   2          OLED_WR_Byte (0x10,OLED_CMD);      //设置显示位置―列高地址   
 168   2          for(n=0;n<128;n++)OLED_WR_Byte(1,OLED_DATA); 
 169   2        } //更新显示
 170   1      }
 171          
 172          //在指定位置显示一个字符,包括部分字符
 173          //x:0~127
 174          //y:0~7
 175          //mode:0,反白显示;1,正常显示         
 176          //size:选择字体 8*16---16  8*6---6 
 177          void OLED_ShowChar(u8 x,u8 y,u8 chr,u8 Char_Size)
 178          {       
C51 COMPILER V9.54   OLED                                                                  04/26/2022 22:30:02 PAGE 4   

 179   1        unsigned char c=0,i=0;  
 180   1        c=chr-' ';//得到偏移后的值      
 181   1      //  if(x>Max_Column-1)
 182   1      //    x=0;y=y+2;
 183   1        
 184   1        //8*16
 185   1        if(Char_Size==16)
 186   1        {
 187   2          OLED_Set_Pos(x,y);  
 188   2          for(i=0;i<8;i++)
 189   2            OLED_WR_Byte(F8X16[c*16+i],OLED_DATA);
 190   2          OLED_Set_Pos(x,y+1);
 191   2          for(i=0;i<8;i++)
 192   2            OLED_WR_Byte(F8X16[c*16+i+8],OLED_DATA);
 193   2        }
 194   1        
 195   1        //8*6
 196   1        else 
 197   1        { 
 198   2          OLED_Set_Pos(x,y);
 199   2          for(i=0;i<6;i++)
 200   2            OLED_WR_Byte(F6x8[c][i],OLED_DATA); 
 201   2        }
 202   1      }
 203          
 204          //m^n函数
 205          u16 oled_pow(u8 m,u8 n)
 206          {
 207   1        u16 result=1;  
 208   1        while(n--)result*=m;    
 209   1        return result;
 210   1      } 
 211          
 212          //显示2个数字
 213          //x,y :起点坐标  
 214          //len :数字的位数
 215          //size:字体大小
 216          //mode:模式 0,填充模式;1,叠加模式
 217          //num:数值(0~4294967295);       
 218          void OLED_ShowNum(u8 x,u8 y,u16 num,u8 len,u8 size2)
 219          {           
 220   1        u8 t,temp;
 221   1        u8 enshow=0;               
 222   1        for(t=0;t<len;t++)
 223   1        {
 224   2          temp=(num/oled_pow(10,len-t-1))%10;
 225   2          if(enshow==0&&t<(len-1))
 226   2          {
 227   3            if(temp==0)
 228   3            {
 229   4              OLED_ShowChar(x+(size2/2)*t,y,' ',size2);
 230   4              continue;
 231   4            }else enshow=1; 
 232   3             
 233   3          }
 234   2          OLED_ShowChar(x+(size2/2)*t,y,temp+'0',size2); 
 235   2        }
 236   1      } 
 237          
 238          //显示一个字符号串
 239          void OLED_ShowString(u8 x,u8 y,u8 *chr,u8 Char_Size)
 240          {
C51 COMPILER V9.54   OLED                                                                  04/26/2022 22:30:02 PAGE 5   

 241   1        unsigned char j=0;
 242   1        while (chr[j]!='\0')
 243   1        {   
 244   2          OLED_ShowChar(x,y,chr[j],Char_Size);
 245   2          x+=8;
 246   2          if(x>120){x=0;y+=2;}
 247   2          j++;
 248   2        }
 249   1      }
 250          
 251          /***********功能描述：显示显示BMP图片128×64起始点坐标(x,y),x的范围0～127，y为页的范围0～7****************
             -*/
 252          void OLED_DrawBMP(unsigned char x0, unsigned char y0,unsigned char x1, unsigned char y1,unsigned char BMP[
             -])
 253          {   
 254   1        unsigned int j=0;
 255   1        unsigned char x,y;
 256   1        
 257   1        if(y1%8==0) 
 258   1          y=y1/8;      
 259   1        else 
 260   1          y=y1/8+1;
 261   1        for(y=y0;y<y1;y++)
 262   1        {
 263   2          OLED_Set_Pos(x0,y);
 264   2          for(x=x0;x<x1;x++)
 265   2            {      
 266   3              OLED_WR_Byte(BMP[j++],OLED_DATA);       
 267   3            }
 268   2        }
 269   1      } 
 270          
 271          //显示汉字(x:列，y:行，no:汉字)
 272          //(x:0~127  y:0~7)
 273          void OLED_ShowCHinese(u8 x,u8 y,u8 no)
 274          {               
 275   1        u8 t,adder=0;
 276   1        OLED_Set_Pos(x,y);
 277   1        //上8个
 278   1          for(t=0;t<16;t++)
 279   1        {
 280   2          OLED_WR_Byte(Hzk[2*no][t],OLED_DATA);
 281   2          adder+=1;
 282   2        } 
 283   1        //下8个
 284   1        OLED_Set_Pos(x,y+1);  
 285   1          for(t=0;t<16;t++)
 286   1        { 
 287   2          OLED_WR_Byte(Hzk[2*no+1][t],OLED_DATA);
 288   2          adder+=1;
 289   2        }         
 290   1      }
 291          
 292          //OLED初始化
 293          void OLED_Init()
 294          {
 295   1        OLED_WR_Byte(0xAE,OLED_CMD);//--display off                         关闭oled面板显示
 296   1        OLED_WR_Byte(0x00,OLED_CMD);//---set low column address         设置显示位置---列低开始地址 （仅在页寻址模式
             -有效）
 297   1        OLED_WR_Byte(0x10,OLED_CMD);//---set high column address      设置显示位置---列高开始地址 （仅在页寻址模式有
             -效）
 298   1        OLED_WR_Byte(0xB0,OLED_CMD);//--set page address          设置显示位置---行开始地址   （仅在页寻址模式有效）
C51 COMPILER V9.54   OLED                                                                  04/26/2022 22:30:02 PAGE 6   

 299   1        OLED_WR_Byte(0x40,OLED_CMD);//--set start line address        设置显示起始行--RAM row 0 is mapped to COM0
 300   1        
 301   1        OLED_WR_Byte(0x81,OLED_CMD); // contract control          设置对比度(双字节)
 302   1        OLED_WR_Byte(0xFF,OLED_CMD);//--256                   对比度为256
 303   1        
 304   1        OLED_WR_Byte(0xA1,OLED_CMD);//set segment remap           设置段重映射：0xa0左右反置 0xa1正常
 305   1          
 306   1        OLED_WR_Byte(0xA6,OLED_CMD);//--normal / reverse          设置正常/反向显示为正常(a6-正常/a7-反向)
 307   1        
 308   1        OLED_WR_Byte(0xA8,OLED_CMD);//--set multiplex ratio(1 to 64)    *设置复用率
 309   1        OLED_WR_Byte(0x3F,OLED_CMD);//--1/64 duty             *复用率值为63+1
 310   1        OLED_WR_Byte(0xC8,OLED_CMD);//Com scan direction          设置扫描方向(与复用率相联系)---0xc0上下反置 0xc8正常
 311   1        
 312   1        OLED_WR_Byte(0xD3,OLED_CMD);//-set display offset         设置显示偏移
 313   1        OLED_WR_Byte(0x00,OLED_CMD);//                    值为0
 314   1        
 315   1        OLED_WR_Byte(0xD5,OLED_CMD);//set osc division            设置显示时钟分频比        
 316   1        OLED_WR_Byte(0x80,OLED_CMD);//                    帧频
 317   1        
 318   1        OLED_WR_Byte(0xD8,OLED_CMD);//set area color mode off       未知
 319   1        OLED_WR_Byte(0x05,OLED_CMD);//
 320   1        
 321   1        OLED_WR_Byte(0xD9,OLED_CMD);//Set Pre-Charge Period         设置预充电期
 322   1        OLED_WR_Byte(0xF1,OLED_CMD);//
 323   1        
 324   1        OLED_WR_Byte(0xDA,OLED_CMD);//set com pin configuartion       设置 COM 引脚硬件配置
 325   1        OLED_WR_Byte(0x12,OLED_CMD);//
 326   1        
 327   1        OLED_WR_Byte(0xDB,OLED_CMD);//set Vcomh               设置 VCOMH 取消选择电平
 328   1        OLED_WR_Byte(0x30,OLED_CMD);//
 329   1        
 330   1        OLED_WR_Byte(0x8D,OLED_CMD);//set charge pump enable        未知
 331   1        OLED_WR_Byte(0x14,OLED_CMD);//
 332   1        
 333   1        OLED_WR_Byte(0xAF,OLED_CMD);//--turn on oled panel          打开oled面板显示
 334   1        
 335   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1573    ----
   CONSTANT SIZE    =   2392    ----
   XDATA SIZE       =   ----      51
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
